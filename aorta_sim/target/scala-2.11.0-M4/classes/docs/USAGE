################
# INSTRUCTIONS #
################

# TODO just point to http://www.aorta-traffic.org/usage/

AORTA is a work-in-progress. If these instructions don't work or you have any
questions about how the code works, please contact me:
  Dustin Carlino, dabreegster@gmail.com

To use AORTA, follow these steps. Each step is detailed in a section below.
Commands to execute are enclosed in 'quotes'.

0) Build AORTA
1) Export your favorite city from OpenStreetMap
2) Convert the OSM map to AORTA's format
3) Run a visual simulation with the GUI
4) If you want, set up a scenario to create specific traffic demand patterns.
   Then run the simulation without the GUI, logging statistics that can be
   post-processed to produce data plots.

Each step is described below.

######################
# BUILD INSTRUCTIONS #
######################

For all platforms:

1) Install Scala 2.10 or newer
   Use your distribution's package manager if possible, or
   http://www.scala-lang.org/downloads otherwise.
2) Get the code
   'git clone https://code.google.com/p/road-rage/'
   'cd road-rage/'

If you are on Linux, the shell scripts are the easiest method:

  3) Run './recompile'
     The Scala compiler is slow. Instructions for using a faster compiler will
     appear eventually.
     (See https://github.com/typesafehub/zinc if you're curious.)

If you can't run bash shell scripts or want to use an IDE,
I don't have specific instructions for you.
- The source code is in utexas/aorta
- There are 2 dependencies you must build and run with:
  - Scala swing, included in your Scala distribution
    (/usr/share/java/scala-swing.jar on my machine)
  - GraphHopper, found at 3rd_party/graphhopper-0.1.jar

#################
# GETTING A MAP #
#################

AORTA runs simulations on maps from OpenStreetMap.

1) Go to http://www.openstreetmap.org/
2) Navigate to the area you want to simulate
3) Click 'Export' at the top, choose 'OpenStreetMap XML Data' as the format,
   click the 'Export' button at the bottom, then save the file as
   osm/your-city.osm
   - If the website does not let you export a large region, you'll have to
     download a larger region (see
     http://wiki.openstreetmap.org/wiki/Planet.osm) and extract the area you
     want (with a tool like http://josm.openstreetmap.de/)

4) Convert the file to AORTA's format.
   Run './build_map osm/your-city.osm'
   This shouldn't take more than 5 minutes for about a 15MB OSM map.
   (If you're using an IDE, execute the utexas.aorta.map.make.Builder class with
    osm/your-city.osm as an argument.)

5) (Optional) To spawn drivers much more quickly, pre-compute shortest routes
   through the map. This only has to be done once per map, but it can take
   around 30 minutes on an older machine for a larger map.
   Run './preroute maps/your-city.map'
   or utexas.aorta.map.make.Preroute with argument maps/your-city.map

########################
# GRAPHICAL SIMULATION #
########################

'./simulate maps/your-city.map'
or utexas.aorta.ui.GUI with argument maps/your-city.map

After launching the GUI, move around by clicking and dragging the mouse and
zooming in with your mouse's scroll wheel. There are many controls not yet
documented.

Running the simulator on a map will generate a default 'scenario', which
specifies 5000 drivers that will join the map within the first 60 seconds of
simulation.
Press 'p' to pause/unpause. (It starts paused, so you won't see drivers.)
Press ']' to speed up the simulation, and '[' to slow it down.

#######################
# RUNNING EXPERIMENTS #
#######################

You can generate AORTA 'scenarios', which will introduce traffic demand patterns
of your choosing. There are many parameters to specify, and I don't have time to
document them yet. An example for the meantime:

'./experiment maps/your-city.map --spawn 25000 delay=3600 generations=5 lifetime=3600 --out scenarios/my-scenario'

This will spawn 25,000 drivers per hour for 5 hours. Run this simulation by
doing './simulate scenarios/my-scenario'
or './headless scenarios/my-scenario' to run faster without the GUI.

You can also log statistics about driver trip times and their delay at each
intersection by passing '--log logs/my-log' to the 'simulate' or 'headless'
script. You can interrupt the simulation before everybody finishes if you like.
Afterwards, run './analyze logs/my-log' and then look at the images generated in
'plots/my-log'.
